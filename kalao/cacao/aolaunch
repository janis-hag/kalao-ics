#!/bin/bash

set -euo pipefail

MSdescr="KalAO loop execution script"

source milk-script-std-config

##### Prerequisites
RequiredCommands=( tmux milk )
RequiredFiles=()
RequiredDirs=()

##### parse arguments
source milk-argparse

##### Load infos for dm

DM_CONFNAME="dmloop"

DM_WORKDIR=$(<${DM_CONFNAME}-conf/WORKDIR)
DM_LOOPNAME=$(<${DM_CONFNAME}-conf/LOOPNAME)

source ${DM_CONFNAME}-conf/cacaovars.${DM_LOOPNAME}.bash

DM_LOOPWORKDIR=$CACAO_LOOPWORKDIR
DM_DMINDEX=$CACAO_DMINDEX
DM_LOOPNUMBER=$CACAO_LOOPNUMBER
DM_WFSSTREAM=$CACAO_WFSSTREAM

##### Load infos for ttm

TTM_CONFNAME="ttmloop"

TTM_WORKDIR=$(<${TTM_CONFNAME}-conf/WORKDIR)
TTM_LOOPNAME=$(<${TTM_CONFNAME}-conf/LOOPNAME)

source ${TTM_CONFNAME}-conf/cacaovars.${TTM_LOOPNAME}.bash

TTM_LOOPWORKDIR=$CACAO_LOOPWORKDIR
TTM_DMINDEX=$CACAO_DMINDEX
TTM_LOOPNUMBER=$CACAO_LOOPNUMBER

#####

if [ $DM_WORKDIR != $TTM_WORKDIR ]
then
	echo "DM and TTM workdir should be the same"
	exit 1
fi

WORKDIR=$TTM_WORKDIR

function sendFPScmd {
  echo "SENDING: $1"
  echo "$1" >> ${MILK_SHM_DIR}/${TTM_CONFNAME}_fpsCTRL.fifo
}

function waitFile {
	echo -n "Waiting $1 "
	while [ ! -f $1 ] ;
	do
		echo -n "."
      	sleep 0.1
	done
	echo " Done"
	sleep 0.1
}

# ======================================================================
# Start all processes
# ======================================================================

stepFile="step.aolaunch.START"
if [ ! -f "$stepFile" ]; then

##### Launch processes common to both loops

NUVU_SDK_HARDWARE_CONCURRENCY=1
export NUVU_SDK_HARDWARE_CONCURRENCY=1

mkdir -p ${WORKDIR}/hardware-workdir
pushd ${WORKDIR}/hardware-workdir

milk-fpsinit -e cacao -C -f ~/kalao-cacao/src/cacao/src/KalAO_BMC/fpslist.txt
NUVU_SDK_HARDWARE_CONCURRENCY=1 milk-fpsinit -e cacao -C -f ~/kalao-cacao/src/cacao/src/KalAO_Nuvu/fpslist.txt
milk-fpsinit -e cacao -C -f ~/kalao-cacao/src/cacao/src/KalAO_SHWFS/fpslist.txt

popd

cp -R hardware-conf/* ${WORKDIR}/hardware-workdir

##### Launch processes dm loop

cacao-task-manager -X 3 "${DM_CONFNAME}"

##### Launch processes dm loop

cacao-task-manager -X 3 "${TTM_CONFNAME}"

touch ${stepFile}
exit
else
echo "found ${stepFile} -> skipping"
fi

# ======================================================================
# Start DM combination
# ======================================================================

stepFile="step.aolaunch.DMCOMB"
if [ ! -f "$stepFile" ]; then

sendFPScmd "setval DMcomb-${DM_DMINDEX}.DMindex ${DM_DMINDEX}"
sendFPScmd "setval DMcomb-${DM_DMINDEX}.DMxsize 12"
sendFPScmd "setval DMcomb-${DM_DMINDEX}.DMysize 12"
sendFPScmd "setval DMcomb-${DM_DMINDEX}.procinfo.loopcntMax -1"
sendFPScmd "setval DMcomb-${DM_DMINDEX}.procinfo.triggermode 4"
sendFPScmd "setval DMcomb-${DM_DMINDEX}.procinfo.triggersname dm${DM_DMINDEX}disp00"

sendFPScmd "confwupdate DMcomb-${DM_DMINDEX}"
sendFPScmd "runstart DMcomb-${DM_DMINDEX}"

sendFPScmd "confwupdate DMcomb-${TTM_DMINDEX}"
sendFPScmd "runstart DMcomb-${TTM_DMINDEX}"

sendFPScmd "setval DMcomb-${TTM_DMINDEX}.DMindex ${TTM_DMINDEX}"
sendFPScmd "setval DMcomb-${TTM_DMINDEX}.procinfo.loopcntMax -1"
sendFPScmd "setval DMcomb-${TTM_DMINDEX}.procinfo.triggermode 4"
sendFPScmd "setval DMcomb-${TTM_DMINDEX}.procinfo.triggersname dm${TTM_DMINDEX}disp00"





touch ${stepFile}
exit
else
echo "found ${stepFile} -> skipping"
fi

# ======================================================================
# Start Hardware
# ======================================================================

stepFile="step.aolaunch.HW"
if [ ! -f "$stepFile" ]; then

##### Configure hardware processes

sendFPScmd "confstart bmc_display"
sendFPScmd "confstart nuvu_acquire"
sendFPScmd "confstart shwfs_process"

sendFPScmd "setval bmc_display.DMin dm${DM_DMINDEX}disp"
sendFPScmd "setval bmc_display.TTMin dm${TTM_DMINDEX}disp"
sendFPScmd "setval bmc_display.procinfo.loopcntMax -1"
sendFPScmd "setval bmc_display.procinfo.triggermode 0"
#sendFPScmd "setval bmc_display.procinfo.triggermode 3"
#sendFPScmd "setval bmc_display.procinfo.triggersname dm${DM_DMINDEX}disp"

sendFPScmd "setval bmc_display.ttm_tip_offset -1.03"
sendFPScmd "setval bmc_display.ttm_tilt_offset -0.03"
#sendFPScmd "setval bmc_display.ttm_tip_offset -0.850"
#sendFPScmd "setval bmc_display.ttm_tilt_offset 0.500"
#sendFPScmd "setval bmc_display.ttm_tip_offset -0.380"
#sendFPScmd "setval bmc_display.ttm_tilt_offset 0.220"
#sendFPScmd "setval bmc_display.ttm_tip_offset 0.300"
#sendFPScmd "setval bmc_display.ttm_tilt_offset -0.090"
#sendFPScmd "setval bmc_display.ttm_tip_offset 0.270"
#sendFPScmd "setval bmc_display.ttm_tilt_offset -0.050"
#sendFPScmd "setval bmc_display.ttm_tip_offset 0.600"
#sendFPScmd "setval bmc_display.ttm_tilt_offset -0.250"



#sendFPScmd "setval nuvu_acquire.procinfo.RTprio 10"
sendFPScmd "setval nuvu_acquire.procinfo.loopcntMax -1"
sendFPScmd "setval nuvu_acquire.procinfo.triggermode 0"

sendFPScmd "setval nuvu_acquire.readoutmode 1"
#sendFPScmd "setval nuvu_acquire.readoutmode 4"
sendFPScmd "setval nuvu_acquire.emgain 1"
#sendFPScmd "setval nuvu_acquire.emgain 20"
sendFPScmd "setval nuvu_acquire.exposuretime 0"
sendFPScmd "setval nuvu_acquire.autogain_params autogain_params.txt"


sendFPScmd "setval shwfs_process.procinfo.loopcntMax -1"
sendFPScmd "setval shwfs_process.procinfo.triggermode 3"
sendFPScmd "setval shwfs_process.procinfo.triggersname nuvu_stream"

sendFPScmd "setval shwfs_process.rawWFSin nuvu_stream"
sendFPScmd "setval shwfs_process.spotcoords spots.txt"
sendFPScmd "setval shwfs_process.outWFS ${DM_WFSSTREAM}"

sendFPScmd "setval nuvu_acquire.conf.taskset 12-15"


##### Start hardware

sendFPScmd "confwupdate bmc_display"
sendFPScmd "runstart bmc_display"

sendFPScmd "confwupdate nuvu_acquire"
sendFPScmd "runstart nuvu_acquire"

##### Load dm flat

waitFile "${MILK_SHM_DIR}/dm${DM_DMINDEX}disp00.im.shm"

pushd ${WORKDIR}/hardware-workdir

cacao << EOF
loadfits "flat_dm.fits" dmflat
readshmim dm${DM_DMINDEX}disp00
cpsh dmflat dm${DM_DMINDEX}disp00
exitCLI
EOF

popd

touch ${stepFile}
exit
else
echo "found ${stepFile} -> skipping"
fi

# ======================================================================
# Start SHWFS
# ======================================================================

stepFile="step.aolaunch.SHWFS"
if [ ! -f "$stepFile" ]; then

waitFile "${MILK_SHM_DIR}/nuvu_stream.im.shm"

sendFPScmd "confwupdate shwfs_process"
sendFPScmd "runstart shwfs_process"

touch ${stepFile}
exit
else
echo "found ${stepFile} -> skipping"
fi

# ======================================================================
# Acquire WFS image from camera
# ======================================================================

stepFile="step.aolaunch.ACQWFS"
if [ ! -f "$stepFile" ]; then

sendFPScmd "confwupdate acquWFS-${DM_LOOPNUMBER}"
sendFPScmd "runstart acquWFS-${DM_LOOPNUMBER}"

touch ${stepFile}
exit
else
echo "found ${stepFile} -> skipping"
fi


# ======================================================================
# Close AO loop
# ======================================================================

stepFile="step.aolaunch.LOOPRUN"
if [ ! -f "$stepFile" ]; then

sendFPScmd "waitonrunOFF"

pushd ${WORKDIR}/${DM_LOOPWORKDIR}

cacao << EOF
loadfits "fps.compsCM-1.datadir/sCMat00.fits" sCMat00_1
cpsh sCMat00_1 aol1_CMat
exitCLI
EOF

popd

sendFPScmd "confwupdate loopRUN-${DM_LOOPNUMBER}"

touch ${stepFile}
exit
else
echo "found ${stepFile} -> skipping"
fi
